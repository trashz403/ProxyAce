#!/usr/bin/python3

import argparse
from validproxy import validproxy

def banner():
    print("""

    """)

def read_proxies_from_file(file_path):
    with open(file_path, 'r') as file:
        proxies = [line.strip() for line in file if line.strip()]
    return proxies

def save_valid_proxies(file_path, valid_proxies):
    with open(file_path, 'w') as file:
        for proxy in valid_proxies:
            file.write(f"{proxy}\n")

def main():
    banner()

    parser = argparse.ArgumentParser(description="Proxy Validator")
    parser.add_argument('--proxy--list', type=str, help='Path to the proxy list file')
    parser.add_argument('--valid--proxy', type=str, help='Path to save valid proxies')
    parser.add_argument('--main', action='store_true', help='Run in interactive mode to ask for inputs')

    args = parser.parse_args()

    if args.main:
        proxy_list = input("Enter the proxy file path: ")
        valid_proxy_save = input("Enter the valid proxy output file path: ")
    else:
        if not args.proxy--list:
            parser.error('--proxy--list is required unless --main is used')
        proxy_list = args.proxy--list
        valid_proxy_save = args.valid--proxy if args.valid--proxy else "valid_proxy.txt"

    proxies = read_proxies_from_file(proxy_list)
    valid_proxies = []

    for proxy in proxies:
        if validproxy(proxy):
            print(f'Valid proxy: {proxy}')
            valid_proxies.append(proxy)
        else:
            print(f'Invalid proxy: {proxy}')

    save_valid_proxies(valid_proxy_save, valid_proxies)

if __name__ == "__main__":
    main()
